name: "Download a Release"
description: "Fetch the latest release from this repo of the report binary."

inputs:
  github_token:
    description: "Token with permissions to read all releases from opg-metadata"
    required: true

  directory:
    description: "Directory path to download data into"
    required: true
    default: "./releases/"

  release:
    description: "version of the account data to fetch, when 'latest' uses latest"
    default: "latest"

  prereleases:
    description: "When true, will include prereleases"
    default: "false"

  repository:
    description: "repository name. default: opg-reports"
    default: "ministryofjustice/opg-reports"


runs:
  using: "composite"
  steps:
    - name: "Create directory"
      shell: bash
      run: mkdir -p ${{ inputs.directory }}
    - name: "Get release tag"
      id: tag
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        release: ${{ inputs.release }}
        repo: ${{ inputs.repository }}
        exclude: ${{ inputs.prereleases == 'false' && '--exclude-pre-releases' || '' }}
      run: |
        tag=${{ env.release }}
        if [[ "${{ env.release }}" == "latest" ]]; then
          tag=$(gh release list --repo ${{ env.repo }} --order "desc" ${{ env.exclude }} --limit 1 --json tagName --jq '.[].tagName')
        fi
        echo "tag=${tag}" >> $GITHUB_OUTPUT
    - name: "Download release [tag:${{ steps.tag.outputs.tag }}]"
      id: download
      shell: bash
      working-directory: ${{ inputs.directory }}
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        repo: ${{ inputs.repository }}
        tag: ${{ steps.tag.outputs.tag }}
      run: |
        gh release download ${{ env.tag }} --clobber --repo ${{ env.repo }}
        ls -lth
