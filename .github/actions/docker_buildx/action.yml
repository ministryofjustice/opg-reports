name: "Docker: Build"
description: "Build docker images"

inputs:
  branch_name:
    description: "Git branch name"
    required: true
  tag:
    description: "Semver tag value"
    required: true

  service:
    description: "Service from the docker compose file to build"
    required: true
  dockerfile:
    description: "Path to Dockerfile"
    required: true


  buildx_version:
    description: "Buildx version"
    default: "v0.15.1"
  buildx_platforms:
    description: "List of platforms to generate images for"
    default: "linux/amd64"


  ecr_repository:
    description: "Name of ECR repository"
    required: true
  ecr_registry_id:
    description: "AWS registry ID"
    default: "311462405659"
# outputs:


runs:
  using: "composite"
  steps:
    # # checkout self
    # - name: "Checkout"
    #   id: checkout
    #   uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 0
    #     fetch-tags: true
    - name: "Debug"
      id: debug
      shell: bash
      run: |
        ls -lthR ./services/api/data
    # QEMU for multi platforms
    - name: Set up QEMU
      id: setup_qemu
      uses: docker/setup-qemu-action@v3.1.0
    # Setup docker buildx
    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3.4.0
      id: docker_buildx_setup
      with:
        version: ${{ inputs.buildx_version }}
        platforms:
    # Login to ecr registry
    - name: "ECR Login"
      id: ecr_login
      uses: aws-actions/amazon-ecr-login@v2.0.1
      with:
        mask-password: true
        registries: ${{ inputs.ecr_registry_id }}
    # # Build image
    # - name: "Build Image [image: ${{ inputs.ecr_repository }} ]"
    #   uses: docker/build-push-action@v6.3.0
    #   with:
    #     context: .
    #     file: ${{ inputs.dockerfile }}
    #     platforms: ${{ inputs.buildx_platforms }}
    #     push: false
    #     load: true
    #     cache-from: type=registry,ref=${{ steps.ecr_login.outputs.registry }}/${{ inputs.ecr_repository }}:cache-${{ inputs.branch_name }}
    #     tags: |
    #       ${{ inputs.ecr_repository }}:${{ inputs.tag }}
    #     build-args: |
    #       TAG=${{ inputs.tag }}
    #   env:
    #     SOURCE_DATE_EPOCH: 0
