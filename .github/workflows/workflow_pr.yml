name: "[Workflow] Pull Request"

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  # setup series of variables either calculated or fixed for this workflow that
  # are used though out the other jobs / steps
  setup:
    name: "Setup"
    runs-on: ubuntu-latest
    outputs:
      aws_role: "arn:aws:iam::679638075911:role/docs-and-metadata-ci"
      terraform_workspace_production: "production"
      terraform_workspace_development: "development"
      terraform_version_account: ${{ steps.terraform_account_version.outputs.version }}
      terraform_version_environment: ${{ steps.terraform_environment_version.outputs.version }}
      branch_name: ${{ steps.semver_tag.outputs.branch_safe }}
      semver_tag: ${{ steps.semver_tag.outputs.created_tag }}
    steps:
      # Check the code base
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      # Find the terraform version details for account & env
      - name: "Parse terraform account version"
        id: terraform_account_version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.0.6
        with:
          terraform_directory: ./terraform/account
      - name: "Parse terraform environment version"
        id: terraform_environment_version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.0.6
        with:
          terraform_directory: ./terraform/environment
      # Generate a semver tag for this workflow
      - name: "Generate semver tag"
        id: semver_tag
        uses: ministryofjustice/opg-github-actions/.github/actions/semver-tag@v3.0.6
        with:
          prerelease: true
          releases_enabled: false

  # build & test go
  build_test_go:
    name: "[Go] Test & Build"
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
      - name: "Test"
        id: go_test
        uses: ./.github/actions/go_tests
      - name: "Build"
        id: "go_build"
        uses: ./.github/actions/go_build
        with:
          target: "all"

  # get build assets
  build_assets:
    name: "Get build assets"
    runs-on: ubuntu-latest
    needs: [setup, build_test_go]
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
      - name: "Configure AWS credentials for S3 access"
        id: configure_aws_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: "eu-west-1"
          role-to-assume: ${{ needs.setup.outputs.aws_role }}
          role-session-name: opg-reports-download-s3-assets
      - name: "Build assets"
        id: build_setup
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          make assets

  # Run docker build
  docker_build:
    name: "[Docker] Build"
    runs-on: ubuntu-latest
    needs: [setup, build_assets]
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
      - name: "Build [api]"
        id: build_api
        uses: ./.github/actions/docker_buildx
        with:
          service: "api"
          ecr_repository: "opg-reports/api"
          branch_name: ${{ needs.setup.outputs.branch_name }}
          tag: ${{ needs.setup.outputs.semver_tag }}
          dockerfile: './docker/api/Dockerfile'

  # Run the terraform for development workspace
  terraform_development:
    name: "[Terraform] Development"
    runs-on: ubuntu-latest
    needs: [setup, docker_build]
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
      # configure the aws role
      - name: "Configure AWS credentials for terraform"
        id: configure_aws_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: "eu-west-1"
          role-session-name: GitHubActionsOpgReportsTerraform
      - name: "Account level terraform"
        uses: ./.github/actions/terraform
        with:
          apply: true
          directory: ./terraform/account
          workspace: ${{ needs.setup.outputs.terraform_workspace_development }}
          version: ${{ needs.setup.outputs.terraform_version_account }}
      - name: "Environment level terraform"
        uses: ./.github/actions/terraform
        with:
          apply: true
          directory: ./terraform/environment
          workspace: ${{ needs.setup.outputs.terraform_workspace_development }}
          version: ${{ needs.setup.outputs.terraform_version_environment }}


  # do the release
  release:
    name: "Create release"
    needs: [terraform_development]
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build_go.outputs.artifact }}
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
      - name: "Build"
        id: "build_go"
        uses: ./.github/actions/go_build
        with:
          target: "all"
          create_artifact: true
      - name: "Create a release"
        id: create_release
        uses: ncipollo/release-action@v1.13.0
        with:
          generateReleaseNotes: false
          tag: ${{ needs.semver.outputs.build_tag }}
          name: ${{ needs.semver.outputs.build_tag }}
          draft: false
          prerelease: true
          artifacts: '${{ steps.build_go.outputs.artifact }}'


  # helper to output summary of steps
  summary:
    name: "Workflow summary"
    if: always()
    needs: [setup, terraform_development, release]
    runs-on: ubuntu-latest
    steps:
      - name: "Terraform"
        run: |
          echo "### Terraform info" >> $GITHUB_STEP_SUMMARY
          echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| terraform workspace development | ${{ needs.setup.outputs.terraform_workspace_development }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| terraform workspace production | ${{ needs.setup.outputs.terraform_workspace_production }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| terraform account version | ${{ needs.setup.outputs.terraform_version_account }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| terraform environment version | ${{ needs.setup.outputs.terraform_version_environment }} |"  >> $GITHUB_STEP_SUMMARY
      - name: "Release"
        run: |
          echo "### Release info" >> $GITHUB_STEP_SUMMARY
          echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| tag | ${{ needs.release.outputs.tag }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| artifact | ${{ needs.release.outputs.artifact }} |"  >> $GITHUB_STEP_SUMMARY


  end:
    name: 'End of workflow'
    runs-on: 'ubuntu-latest'
    needs: [summary]
    steps:
      - id: end
        name: End
        run: echo "End"
