name: "[TF] Plan & Apply "

on:
  workflow_call:
    inputs:
      workspace:
        description: "Terraform workspace to use"
        type: string
        required: true
        default: "dev"
      version:
        description: "Terraform version to use"
        type: string
        required: true
      directory:
        description: "Directory path to use for plan and apply"
        type: string
        required: true
      apply:
        description: "Boolean to determine if this should be applied or not"
        type: boolean
        required: true
        default: false
      register_ephemeral:
        description: "Boolean to determine if this is an ephemeral environment that we need to track"
        type: boolean
        required: true
        default: false

    secrets:
      AWS_ACCESS_KEY_ID_ACTIONS:
        required: true
      AWS_SECRET_ACCESS_KEY_ACTIONS:
        required: true
      SSH_PRIVATE_KEY:
        required: false

permissions:
  contents: write
  security-events: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

jobs:

  plan_apply:
    name: "Plan and Apply"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{inputs.directory}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup terraform [version: ${{ inputs.version }}]"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.version }}
      - name: "Lint Terraform"
        id: lint
        run: terraform fmt -check -recursive
      - name: "SSH Agent"
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: "Configure AWS Credentials For Terraform"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsOpgReports
      - name: "Plan"
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          terraform init -input=false -lock-timeout=300s
          terraform plan -lock-timeout=300s -input=false -out=terraform.plan -parallelism=30
